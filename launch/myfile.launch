<launch>

  <arg name="gui" default="true"/>
	
  <param name="/use_sim_time" value="true" />

  <!-- start up empty world -->
  <arg name="paused" default="false"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)" />
  </include>

  <node pkg="tf" type="static_transform_publisher" name="map_to_world" args="0 0 0 0 0 0 1 world map 100" />

  <node name="world_linker" pkg = "gazebo_tf_linker" type="linker" output="screen"/>

  <group>
    <!--<param name="tf_prefix" value="pr2"/>-->
  	<include file="$(find pr2_gazebo)/launch/pr2.launch"/>
  </group>

  <!-- -J r_upper_arm_roll_joint -1.64 -J r_shoulder_pan_joint -2.135 -J r_shoulder_lift_joint -0.02 -J r_forearm_roll_joint -1.64 -J r_elbow_flex_joint -2.07 -J r_wrist_flex_joint -1.68 -J r_wrist_roll_joint 1.40 --> 
  <!--include file="$(find pr2_controller_configuration_gazebo)/launch/pr2_default_controllers.launch" /-->
  <group ns="workbench">


    <param name="tf_prefix" value="workbench"/>
s
    <param name="robot_description" command="cat $(find vr_track_alvar)/urdf/testbox.urdf" />

    <node name="spawn_workbench" pkg="gazebo_ros" type="spawn_model" 
	   args="-urdf  -param robot_description -model workbench -Y 1.571 -y -1.0 -x 2.0 -z 0" 
	   respawn="false" output="screen" />

	<include file="$(find vr_track_alvar)/control/controller.launch"/>
  </group>

  <!-- parameters that give you reasonable physics as well as good speed -->
  <!-- needed so that gripper joint stops on objects instead of oscillating forever
  <node name="sor_pgs_iters" pkg="dynamic_reconfigure" type="dynparam" args="set gazebo sor_pgs_iters 50"/>
  <node name="sor_pgs_w" pkg="dynamic_reconfigure" type="dynparam" args="set gazebo sor_pgs_w 1.0"/>
  <node name="time_step" pkg="dynamic_reconfigure" type="dynparam" args="set gazebo time_step 0.001"/>
  -->
 
  <include file="$(find vr_track_alvar)/launch/individual.launch"/>
 
  <include file="$(find simple_robot_control)/launch/simple_robot_control.launch"/>
 
  <node name="arworld" pkg = "pr2_movement_routines" type="arWorldModel.py" output="screen"/>

  <node name = "mapper" pkg = "gmapping" type = "slam_gmapping" args="scan:=base_scan _odom_frame:=odom_combined"/>


</launch>
